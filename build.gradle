group 'rlbotofficial'
version '1.0'


buildscript {
    repositories {
        jcenter()
    }
    dependencies {
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'

repositories {
    jcenter()
}

dependencies {
    compile 'rlbotofficial.RLBotProtoMaven:proto-interface:0.0.2:game_data@py'
    compile 'rlbotofficial.RLBotProtoMaven:proto-interface:0.0.2'
    compile group: 'net.java.dev.jna', name: 'jna', version: '4.5.1'
    compile group: 'net.java.dev.jna', name: 'jna-platform', version: '4.5.1'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.1.0'
    compile group: 'net.sf.py4j', name: 'py4j', version: '0.10.6'
}

def pythonRoot = './src/main/python/'

task assembleProto(type: Copy) {
    from findFile('game_data.py')
    into pythonRoot + 'protobuf'
    rename { String file ->
        'game_data_pb2.py'
    }
}

clean {
    delete fileTree(pythonRoot + 'protobuf') {
        include '**/*pb2.py'
    }
}

def findFile(suffix) {
    configurations.compile.filter { it.name.endsWith(suffix) }
}



task pipInstallRequirements(type: Exec) {
    commandLine "pip", "install", "-r", pythonRoot + "requirements.txt"
}

processResources.dependsOn pipInstallRequirements
processResources.dependsOn assembleProto

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task frameworkZip(type: Zip, dependsOn: processResources) {
    from fileTree('src/main/python/')
    from ('/') {
        include 'LICENSE.txt'
    }
}

// Create the publication with the pom configuration:
publishing {
    publications {
        Main(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact frameworkZip
            groupId group
            artifactId 'RLBotFramework'
            version version
        }
    }
}
